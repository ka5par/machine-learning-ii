{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Gibbs sampler for normal distribution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Random Markov Fields together with quadratic sub-potentials lead to a high-dimensional normal distribution:\n",
    "\n",
    "* Quadratic sub-potentials fix an inverse covariance matrix.\n",
    "* Covariance matrix $\\Sigma$ can be by inverting the inverse covariance matrix.\n",
    "* Multivariate normal distributions can sampled with `scipy`.\n",
    "\n",
    "However, this quickly becomes infeasible if image sizes go beyond $32\\times 32$. Thus we need a method for sampling images without the inversion.\n",
    "This can be done with a [Gibbs sampling](https://en.wikipedia.org/wiki/Gibbs_sampling) algorithm that iteratively updates individual pixels $x_{ij}$ until sufficiently many iterations are carried out and we have an image that comes from a distribution that is very close to our target distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from pandas import DataFrame\n",
    "from plotnine import *\n",
    "\n",
    "# Local imports\n",
    "from common import *\n",
    "from convenience import *"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## I. Standard Gibbs sampling algorithm for normal distribution\n",
    "\n",
    "\n",
    "To sample a two-dimensional normal distribution with parameters $\\boldsymbol{\\mu}$ and $\\Sigma$ we need to do following steps:\n",
    "\n",
    "* Initialise values of $x, y$ with some value. The mean $(\\mu_1,\\mu_2)$ is good starting point. \n",
    "\n",
    "* Sample a new value of $x$ from a conditional probability distribution $p(x|y,\\Sigma,\\boldsymbol{\\mu})$\n",
    "\n",
    "* Sample a new value of $y$ from a conditional probability distribution $p(y|x,\\Sigma,\\boldsymbol{\\mu})$\n",
    "\n",
    "* Repeat these two last steps until convergence.\n",
    "\n",
    "\n",
    "**Known issues:** \n",
    "* It can be quite tricky to determine whether the number of iterations is sufficient or not. \n",
    "* The number of iterations can be quite large â€“ sometimes around one million. You can try with 1000 iterations.\n",
    "\n",
    "**Known shoercuts:**\n",
    "* Conditional distributions are univariate normal distributions.\n",
    "* Its parameters can be looked up from The Matrix Cookbook. \n",
    "* Parameters for $p(x|y,\\Sigma,\\boldsymbol{\\mu})$:\n",
    "\n",
    "\\begin{align*}\n",
    "\\begin{cases}\n",
    "\\mu_x=\\mu_x+ \\Sigma_{x,y}\\Sigma_{y,y}^{-1}(y-\\mu_y)\\\\\n",
    "\\sigma_x=\\Sigma_{x,x} - \\Sigma_{x,y}\\Sigma_{y,y}^{-1}\\Sigma_{x,y}\n",
    "\\end{cases}\\\\\n",
    "\\end{align*}\n",
    "\n",
    "* Parameters for $p(y|x,\\Sigma,\\boldsymbol{\\mu})$:\n",
    "\n",
    "\\begin{align*}\n",
    "\\begin{cases}\n",
    "\\mu_x=\\mu_x+ \\Sigma_{x,y}\\Sigma_{y,y}^{-1}(y-\\mu_y)\\\\\n",
    "\\sigma_x=\\Sigma_{x,x} - \\Sigma_{x,y}\\Sigma_{y,y}^{-1}\\Sigma_{x,y}\n",
    "\\end{cases}\\\\\n",
    "\\end{align*}\n",
    "\n",
    "### Implementation\n",
    "The code is taken from  [Agustinus Kristiadi's Blog](https://wiseodd.github.io/techblog/2015/10/09/gibbs-sampling/)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "def p_x_given_y(y, mus, sigmas):\n",
    "    mu = mus[0] + sigmas[1, 0] / sigmas[1, 1] * (y - mus[1])\n",
    "    sigma = sigmas[0, 0] - sigmas[1, 0] / sigmas[1, 1] * sigmas[1, 0]\n",
    "    return np.random.normal(mu, sigma)\n",
    "\n",
    "\n",
    "def p_y_given_x(x, mus, sigmas):\n",
    "    mu = mus[1] + sigmas[0, 1] / sigmas[0, 0] * (x - mus[0])\n",
    "    sigma = sigmas[1, 1] - sigmas[0, 1] / sigmas[0, 0] * sigmas[0, 1]\n",
    "    return np.random.normal(mu, sigma)\n",
    "\n",
    "\n",
    "def gibbs_sampling(mus, sigmas, iter=10000):\n",
    "    samples = np.zeros((iter, 2))\n",
    "    y = np.random.rand() * 10\n",
    "\n",
    "    for i in range(iter):\n",
    "        x = p_x_given_y(y, mus, sigmas)\n",
    "        y = p_y_given_x(x, mus, sigmas)\n",
    "        samples[i, :] = [x, y]\n",
    "\n",
    "    return DataFrame(samples).rename(columns={0: 'x', 1: 'y'})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Run and visualisation\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.748687</td>\n",
       "      <td>3.757428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3.657790</td>\n",
       "      <td>3.417638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.257421</td>\n",
       "      <td>3.051261</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.384291</td>\n",
       "      <td>3.251540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.289823</td>\n",
       "      <td>3.601342</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          x         y\n",
       "0  3.748687  3.757428\n",
       "1  3.657790  3.417638\n",
       "2  3.257421  3.051261\n",
       "3  3.384291  3.251540\n",
       "4  3.289823  3.601342"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<ggplot: (-9223372036515020789)>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mus = np.array([5, 5])\n",
    "sigmas = np.array([[1, .9], [.9, 1]])\n",
    "df = gibbs_sampling(mus, sigmas)\n",
    "display(head(df))\n",
    "display(ggplot(df) + geom_point(aes(x = 'x', y = 'y'), alpha = 0.5))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## II. Gibbs sampling algorithm for Random Markov Fields\n",
    "\n",
    "\n",
    "The Gibbs sampling algorithm adjusted to sampling images based on Random Markov Fields is the following:\n",
    "\n",
    "* Initialize starting values of $x_{i,j}$ for $i \\in \\{1,\\ldots, m\\}$ and $j\\in\\{1,\\ldots,n\\}$.\n",
    "* Order the $m Ã— n$ grid of pixels and for each variable $x_{i,j}$ in the specified order do:\n",
    "   * Sample $x_{i,j}$ based on its neigbours, i.e., $p[x_{i,j}|\\mathcal{N}(x_{i,j})]$.\n",
    "* Repeat the last step until convergence.     \n",
    "\n",
    "\n",
    "Note that if we fix  $x_{ij}$ for known pixels, the algorithm also provides a reconstructed image."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Conditional probabilities\n",
    "\n",
    "It is possible to specify the distribution through sub-potentials but then it is non-trivial to find the formula for the conditional probability.\n",
    "\n",
    "<img src = 'illustrations/markov-random-field-ii.png' width=100%>\n",
    "\n",
    "As a way out, we specify the conditional distribution through sub-potentials\n",
    "\n",
    "\\begin{align*}\n",
    "p[x_4| x_1, x_3,x_5,x_7]\n",
    "&\\propto \\exp\\Bigl( -\\frac{\\alpha}{2}(x_1-x_4)^2  -\\frac{\\alpha}{2}(x_7-x_4)^2-  \\frac{\\beta}{2}(x_3-x_4)^2-\\frac{\\beta}{2}(x_5-x_4)^2-\\frac{\\delta^2}{2} x_4^2\\Bigr)\\\\\n",
    "&\\propto \\exp\\Bigl( -(\\alpha+\\beta+\\delta/2)x_4^2 + x_4(\\alpha x_1+\\alpha x_7+\\beta x_3+\\beta x_5)\\Bigr)\\\\\n",
    "&\\propto \\exp\\Bigl(-(\\alpha+\\beta+\\delta^2/2)(x_4^2 + 2\\cdot\\frac{\\alpha (x_1+x_7)+\\beta (x_3+x_5)}{2\\alpha+2\\beta+\\delta^2}\\cdot x_4\\Bigr)\\\\\n",
    "&\\propto \\exp\\Biggl(-(\\alpha+\\beta+\\delta^2/2)\\Bigl(x_4 - 2\\frac{\\alpha (x_1+x_7)+\\beta (x_3+x_5)}{2\\alpha+2\\beta+\\delta^2}\\Bigr)^2\\Biggr)\\\\\n",
    "\\end{align*}\n",
    "\n",
    "and thus the conditional distrinution for $x_4$ is a normal distribution with parameters\n",
    "\n",
    "\\begin{align*}\n",
    "\\mu&=\\frac{\\alpha (x_1+x_7)+\\beta (x_3+x_5)}{2\\alpha+2\\beta+\\delta}\\\\\n",
    "\\sigma^2&=2\\alpha+2\\beta+\\delta^2\n",
    "\\end{align*}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sampling strategy\n",
    "\n",
    "* Double-iteration over the image matrix is extremely slow.\n",
    "* A single modification alters only the neighbours of its neighbours   \n",
    "* Parrallel updates for $3\\times 3$ patches are possible. \n",
    "* We can define 9 sub-matrices and updates each of them in parallel\n",
    "* Moreover sampling parameters can be computed using linear combinations of these matrices. \n",
    "* As a result, we can use parallel operations in `numpy` and `scipy`.\n",
    "* The package `tensorflow_probability` is even more appropriate."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Homeworks"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 Gibbs sampler for 2 by 2 grid (<font color='red'>1p + 1p</font>)\n",
    "\n",
    "Let us consider four element Markov field\n",
    "\n",
    "<img src = 'illustrations/markov-random-field-iv.png' width=100%>\n",
    "\n",
    "where all random variales $X_i$ have only two states $\\{0,1\\}$ and the node is set to $1$ with the following probability\n",
    " \n",
    "\n",
    "|Left |Right |Probability \n",
    "|---|---|---|\n",
    "| 0 | 0 | $1/4$ |\n",
    "| 0 | 1 | $1/4$ |\n",
    "| 1 | 0 | $1/4$ |\n",
    "| 1 | 1 | $3/4$ | \n",
    "\n",
    "Write a corresponding gibbs sampler and run enough samples to estimate the probabilities of all 16 configurations. You should discard first 1000 samples and then use the standard frequency counting. Note that individual observations are dependent but the frequencies still converge to the true probabailities. You can skip samples if you want to get more independent samples (<font color='red'>1p</font>).\n",
    "\n",
    "Use the method of subpotentials to defive the closed formula.\n",
    "Note that we have only four maximal cliques and we need to define four function $\\Psi_1,\\ldots, \\Psi_4$. Each of those functions takes two arguments and thus\n",
    "\n",
    "\\begin{align*}\n",
    "\\Pr[\\boldsymbol{x}]\n",
    "&\\propto \\exp\\bigl(-\\Psi_1(x_1, x_2)- \\Psi_2(x_2, x_3)-\\Psi_3(x_3, x_4)-\\Psi_4(x_4, x_1)\\bigr)\\\\\n",
    "&\\propto \\psi_1(x_1, x_2)\\cdot\\psi_2(x_2, x_3)\\cdot\\psi_3(x_3, x_4)\\cdot\\psi_4(x_4, x_1)\n",
    "\\end{align*}\n",
    "\n",
    "If you express the probabilities of all 16 configurations\n",
    "\n",
    "|$X_1$ | $X_2$ | $X_3$ | $X_4$ |$\\Pr$ \n",
    "|---|---|---|---|---|\n",
    "| 0 | 1 | 0 | 0 | $\\psi_1(0, 1)\\cdot\\psi_2(1, 0)\\cdot\\psi_3(0, 0)\\cdot\\psi_4(0, 0)$ | \n",
    "| 0 | 1 | 0 | 1 | $\\psi_1(0, 1)\\cdot\\psi_2(1, 0)\\cdot\\psi_3(0, 1)\\cdot\\psi_4(1, 0)$ |  \n",
    "| 0 | 0 | 0 | 0 | $\\psi_1(0, 0)\\cdot\\psi_2(0, 0)\\cdot\\psi_3(0, 0)\\cdot\\psi_4(0, 0)$ | \n",
    "| 0 | 0 | 0 | 1 | $\\psi_1(0, 0)\\cdot\\psi_2(0, 0)\\cdot\\psi_3(0, 1)\\cdot\\psi_4(1, 0)$ | \n",
    "\n",
    "from which you get constraints to the values of $\\psi_i(\\cdot,\\cdot)$ and can find analytical solution (<font color='red'>1p</font>).\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 Large-scale modelling of textures (<font color='red'>3p</font>)\n",
    "\n",
    "Define a Gibbs sampler for $128\\times 128$ images and compare how different are sample images for four and eight pixel neighbourhoods  \n",
    "\n",
    "<table width=80%>\n",
    "    <tr>\n",
    "        <td>\n",
    "        <img src = 'illustrations/markov-random-field-ii.png' width=100%>\n",
    "        </td>\n",
    "        <td>\n",
    "        <img src = 'illustrations/markov-random-field-iii.png' width=100%>\n",
    "        </td>\n",
    "    </tr>\n",
    "</table>        \n",
    "\n",
    "Experiment with different $\\alpha, \\beta, \\gamma,\\delta$ values. What happens if you take the output of four pixel neighbourhood Markov Random Field as an initial state for the Gibbs sampler with the eight pixel neighbourhood.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 Large-scale non-gaussian modelling of textures (<font color='red'>3p + 2p</font>)\n",
    "\n",
    "So far we have considered Random Markov Fields with where conditional distributions are\n",
    "normal distributions with very restricted parameter set. \n",
    "We can relax it by assuming that the conditional distribution $x_i$ given its neighbours is a normal distribution $\\mathcal{N}(\\mu,\\sigma)$ where $\\mu, \\sigma$ can depend non-linearly on the intensities of the neighbouring pixels.  \n",
    "\n",
    "For simplicity assume that $\\sigma$ is constant. Then one can learn the conditional distribution by finding a predictor of $x_i$ that minimises mean square error.\n",
    "Technically, one should use non-overlapping patches to learn the model but in practice you can look at all possible windows of a particular texture.\n",
    "\n",
    "Perform the following estimation cycle:\n",
    "\n",
    "* Pick large enough reighbourhood definition,\n",
    "* Train your favorite non-linear model $f$ for predicting $x_i$.\n",
    "* Use $f$ to predict $\\mu_i$ values for all patches.\n",
    "* Estmate $\\sigma$ from residuals $x_i-\\mu_i$.\n",
    "\n",
    "Next use Gibbs sampler to generate random images. Try also impute missing values.\n",
    "Estimate visually how well imputation works. For simplicity use only grayscale images.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
